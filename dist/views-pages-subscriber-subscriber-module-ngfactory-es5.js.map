{"version":3,"sources":["webpack:///src/app/views/pages/subscriber/auth-notice/auth-notice.component.html","webpack:///src/app/views/pages/subscriber/auth-notice/auth-notice.component.ts","webpack:///src/app/views/pages/subscriber/choose-password/choose-password.component.html","webpack:///src/app/views/pages/subscriber/choose-password/choose-password.component.ts","webpack:///src/app/views/pages/subscriber/choose-password/password.service.ts","webpack:///src/app/views/pages/subscriber/forgot-password/forgot-password.component.html","webpack:///src/app/views/pages/subscriber/forgot-password/forgot-password.component.ts","webpack:///src/app/views/pages/subscriber/login/login.component.html","webpack:///src/app/views/pages/subscriber/login/login.component.ts","webpack:///src/app/views/pages/subscriber/login/login.service.ts","webpack:///src/app/views/pages/subscriber/register/register.component.html","webpack:///src/app/views/pages/subscriber/register/register.component.ts","webpack:///src/app/views/pages/subscriber/register/register.service.ts","webpack:///src/app/views/pages/subscriber/subscriber-routing.module.ts","webpack:///src/app/views/pages/subscriber/subscriber.component.html","webpack:///src/app/views/pages/subscriber/subscriber.component.ts","webpack:///src/app/views/pages/subscriber/subscriber.module.ts"],"names":["AuthNoticeComponent","authNoticeService","cdr","message","subscriptions","push","onNoticeChanged$","subscribe","notice","Object","assign","type","markForCheck","forEach","sb","unsubscribe","ChoosePasswordComponent","authService","translate","router","fb","passwordService","loading","errors","initRegistrationForm","passwords","group","new_pwd","conf_pwd","choosePassword","params","value","response","console","log","navigateByUrl","error","next","complete","forgotPasswordForm","email","compose","required","minLength","maxLength","controls","invalid","keys","controlName","markAsTouched","requestPassword","pipe","setNotice","instant","name","validationType","control","result","hasError","dirty","touched","PasswordService","apiService","data","post","changePassword","ForgotPasswordComponent","DEMO_PARAMS","EMAIL","PASSWORD","LoginComponent","auth","store","route","loginService","jwt","initLoginForm","queryParams","returnUrl","userForm","username","password","login","success","user","token","setToken","window","localStorage","setItem","id","getValue","initialNotice","LoginService","RegisterComponent","registerService","activeRoute","mobile","actionType","param","registerType","isForgot","registerUser","checkVerificationStatus","addControl","detectChanges","RegisterService","url","register","verifyMobile","location","pathname","routes","path","component","children","redirectTo","pathMatch","SubscriberRoutingModule","SubscriberComponent","el","render","layoutConfigService","translationService","splashScreenService","today","Date","now","setLanguage","getSelectedLanguage","headerLogo","getLogo","hide","styleUrl","Promise","resolve","reject","styleElement","document","createElement","href","rel","onload","appendChild","nativeElement","SubscriberModule"],"mappings":"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","file":"views-pages-subscriber-subscriber-module-ngfactory-es5.js","sourcesContent":["<div [hidden]=\"!message\" class=\"alert alert-{{type}}\" role=\"alert\" #alertNotice>\r\n\t<div class=\"alert-text\" [innerHTML]=\"message\"></div>\r\n</div>\r\n","// Angular\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, Output } from '@angular/core';\r\n// RxJS\r\nimport { Subscription } from 'rxjs';\r\n// Auth\r\nimport { AuthNotice, AuthNoticeService } from '../../../../core/auth/';\r\n\r\n@Component({\r\n\tselector: 'kt-auth-notice',\r\n\ttemplateUrl: './auth-notice.component.html',\r\n})\r\nexport class AuthNoticeComponent implements OnInit, OnDestroy {\r\n\t@Output() type: any;\r\n\t@Output() message: any = '';\r\n\r\n\t// Private properties\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\t/**\r\n\t * Component Constructure\r\n\t *\r\n\t * @param authNoticeService\r\n\t * @param cdr\r\n\t */\r\n\tconstructor(public authNoticeService: AuthNoticeService, private cdr: ChangeDetectorRef) {\r\n\t}\r\n\r\n\t/*\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n    */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.subscriptions.push(this.authNoticeService.onNoticeChanged$.subscribe(\r\n\t\t\t(notice: AuthNotice) => {\r\n\t\t\t\tnotice = Object.assign({}, {message: '', type: ''}, notice);\r\n\t\t\t\tthis.message = notice.message;\r\n\t\t\t\tthis.type = notice.type;\r\n\t\t\t\tthis.cdr.markForCheck();\r\n\t\t\t}\r\n\t\t));\r\n\t}\r\n\r\n\t/**\r\n\t * On destroy\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sb => sb.unsubscribe());\r\n\t}\r\n}\r\n","<!--begin::Body-->\n<div class=\"d-flex flex-column-fluid flex-center mt-30 mt-lg-0 height-100\">\n\t<!--begin::Signin-->\n\t<div class=\"login-form login-signin\">\n\t\t<div class=\"text-center mb-10 mb-lg-20\">\n\t\t\t<h3 class=\"font-size-h1\">Choose Password</h3>\n\t\t\t<!-- <p class=\"text-muted font-weight-semi-bold\">Enter your email to reset your password</p> -->\n\t\t</div>\n\n\t\t<kt-auth-notice></kt-auth-notice>\n\n\t\t<form class=\"form\" [formGroup]=\"passwords\" autocomplete=\"off\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-label>Password</mat-label>\n\t\t\t\t\t<input matInput type=\"password\" placeholder=\"Password\"\n\t\t\t\t\t\tformControlName=\"new_pwd\" autocomplete=\"off\" />\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('password','required')\">\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\n\t\t\t\t\t</mat-error>\n\t\t\t\t</mat-form-field>\n            </div>\n            <div class=\"form-group\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-label>Confirm Password</mat-label>\n\t\t\t\t\t<input matInput type=\"password\" placeholder=\"Confirm Password\"\n\t\t\t\t\t\tformControlName=\"conf_pwd\" autocomplete=\"off\" />\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('password','required')\">\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\n\t\t\t\t\t</mat-error>\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t\t<!--begin::Action-->\n\t\t\t<div class=\"fform-group d-flex flex-wrap flex-center\">\n\t\t\t\t<button (click)=\"choosePassword()\" id=\"kt_login_forgot_submit\"\n\t\t\t\t\tclass=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\n\t\t\t\t\t[ngClass]=\"{'spinner spinner-right spinner-md spinner-light': loading}\">{{ 'AUTH.GENERAL.SUBMIT_BUTTON' | translate }}</button>\n\n\t\t\t\t<a href=\"/auth/login\" id=\"kt_login_signup_cancel\"\n\t\t\t\t\tclass=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\">{{ 'AUTH.GENERAL.BACK_BUTTON' | translate }}</a>\n\n\t\t\t</div>\n\t\t\t<!--end::Action-->\n\t\t</form>\n\t</div>\n</div>","// Angular\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n// RxJS\nimport { finalize, takeUntil, tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n// Translate\nimport { TranslateService } from '@ngx-translate/core';\n// Auth\nimport { AuthNoticeService, AuthService } from '../../../../core/auth';\nimport { PasswordService } from './password.service';\n\n@Component({\n    selector: 'kt-choose-password',\n    templateUrl: './choose-password.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChoosePasswordComponent implements OnInit, OnDestroy {\n    // Public params\n    forgotPasswordForm: FormGroup;\n    passwords: FormGroup;\n    loading = false;\n    errors: any = [];\n\n    private unsubscribe: Subject<any>; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n\t/**\n\t * Component constructor\n\t *\n\t * @param authService\n\t * @param authNoticeService\n\t * @param translate\n\t * @param router\n\t * @param fb\n\t * @param cdr\n\t */\n    constructor(\n        private authService: AuthService,\n        public authNoticeService: AuthNoticeService,\n        private translate: TranslateService,\n        private router: Router,\n        private fb: FormBuilder,\n        private cdr: ChangeDetectorRef,\n        private passwordService: PasswordService\n    ) {\n        this.unsubscribe = new Subject();\n    }\n\n\t/**\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\n\t */\n\n\t/**\n\t * On init\n\t */\n    ngOnInit() {\n        this.initRegistrationForm();\n        this.passwords = this.fb.group({\n            new_pwd: [''],\n            conf_pwd: ['']\n        });\n    }\n\n    choosePassword() {\n        this.passwordService.choosePassword({ params: this.passwords.value }).subscribe(response => {\n            console.log(response);\n            this.router.navigateByUrl('nurse/profile');\n        }, error => {\n            console.log(error);\n        })\n    }\n\n\t/**\n\t * On destroy\n\t */\n    ngOnDestroy(): void {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n        this.loading = false;\n    }\n\n\t/**\n\t * Form initalization\n\t * Default params, validators\n\t */\n    initRegistrationForm() {\n        this.forgotPasswordForm = this.fb.group({\n            email: ['', Validators.compose([\n                Validators.required,\n                Validators.email,\n                Validators.minLength(3),\n                Validators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n            ])\n            ]\n        });\n    }\n\n\t/**\n\t * Form Submit\n\t */\n    submit() {\n        const controls = this.forgotPasswordForm.controls;\n        /** check form */\n        if (this.forgotPasswordForm.invalid) {\n            Object.keys(controls).forEach(controlName =>\n                controls[controlName].markAsTouched()\n            );\n            return;\n        }\n\n        this.loading = true;\n\n        const email = controls.email.value;\n        this.authService.requestPassword(email).pipe(\n            tap(response => {\n                if (response) {\n                    this.authNoticeService.setNotice(this.translate.instant('AUTH.FORGOT.SUCCESS'), 'success');\n                    this.router.navigateByUrl('/auth/login');\n                } else {\n                    this.authNoticeService.setNotice(this.translate.instant('AUTH.VALIDATION.NOT_FOUND', { name: this.translate.instant('AUTH.INPUT.EMAIL') }), 'danger');\n                }\n            }),\n            takeUntil(this.unsubscribe),\n            finalize(() => {\n                this.loading = false;\n                this.cdr.markForCheck();\n            })\n        ).subscribe();\n    }\n\n\t/**\n\t * Checking control validation\n\t *\n\t * @param controlName: string => Equals to formControlName\n\t * @param validationType: string => Equals to valitors name\n\t */\n    isControlHasError(controlName: string, validationType: string): boolean {\n        const control = this.forgotPasswordForm.controls[controlName];\n        if (!control) {\n            return false;\n        }\n\n        const result =\n            control.hasError(validationType) &&\n            (control.dirty || control.touched);\n        return result;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '../../../../apiservice/api.service';\nimport { Observable } from 'rxjs';\nimport { urls } from '../../../../urls/urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordService {\n\n  constructor(private apiService: ApiService) { }\n\n  choosePassword(data): Observable<any> {\n    return this.apiService.post(urls.changePassword, data);\n  }\n\n}\n","<!--begin::Body-->\r\n<div class=\"d-flex flex-column-fluid flex-center mt-30 mt-lg-0 height-100\">\r\n\t<!--begin::Signin-->\r\n\t<div class=\"login-form login-signin\">\r\n\t\t<div class=\"text-center mb-10 mb-lg-20\">\r\n\t\t\t<h3 class=\"font-size-h1\">{{ 'AUTH.FORGOT.TITLE' | translate }}</h3>\r\n\t\t\t<p class=\"text-muted font-weight-semi-bold\">Enter your email to reset your password</p>\r\n\t\t</div>\r\n\r\n\t\t<kt-auth-notice></kt-auth-notice>\r\n\r\n\t\t<form class=\"form\" [formGroup]=\"forgotPasswordForm\" autocomplete=\"off\">\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>{{ 'AUTH.INPUT.EMAIL' | translate }}</mat-label>\r\n\t\t\t\t\t<input matInput type=\"email\" placeholder=\"{{ 'AUTH.INPUT.EMAIL' | translate }}\"\r\n\t\t\t\t\t\tformControlName=\"email\" autocomplete=\"off\" />\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('email','required')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('email','email')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.INVALID_FIELD' | translate }}</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('email','minLength')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.MIN_LENGTH_FIELD' | translate }} 3</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('email','maxLength')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.MAX_LENGTH_FIELD' | translate }} 320</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<!--begin::Action-->\r\n\t\t\t<div class=\"fform-group d-flex flex-wrap flex-center\">\r\n\t\t\t\t<button (click)=\"submit()\" id=\"kt_login_forgot_submit\"\r\n\t\t\t\t\tclass=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n\t\t\t\t\t[ngClass]=\"{'spinner spinner-right spinner-md spinner-light': loading}\">{{ 'AUTH.GENERAL.SUBMIT_BUTTON' | translate }}</button>\r\n\r\n\t\t\t\t<a href=\"/auth/login\" id=\"kt_login_signup_cancel\"\r\n\t\t\t\t\tclass=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\">{{ 'AUTH.GENERAL.BACK_BUTTON' | translate }}</a>\r\n\r\n\t\t\t</div>\r\n\t\t\t<!--end::Action-->\r\n\t\t</form>\r\n\t</div>\r\n</div>","// Angular\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n// RxJS\r\nimport { finalize, takeUntil, tap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n// Translate\r\nimport { TranslateService } from '@ngx-translate/core';\r\n// Auth\r\nimport { AuthNoticeService, AuthService } from '../../../../core/auth';\r\n\r\n@Component({\r\n\tselector: 'kt-forgot-password',\r\n\ttemplateUrl: './forgot-password.component.html',\r\n\tencapsulation: ViewEncapsulation.None\r\n})\r\nexport class ForgotPasswordComponent implements OnInit, OnDestroy {\r\n\t// Public params\r\n\tforgotPasswordForm: FormGroup;\r\n\tloading = false;\r\n\terrors: any = [];\r\n\r\n\tprivate unsubscribe: Subject<any>; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param authService\r\n\t * @param authNoticeService\r\n\t * @param translate\r\n\t * @param router\r\n\t * @param fb\r\n\t * @param cdr\r\n\t */\r\n\tconstructor(\r\n\t\tprivate authService: AuthService,\r\n\t\tpublic authNoticeService: AuthNoticeService,\r\n\t\tprivate translate: TranslateService,\r\n\t\tprivate router: Router,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate cdr: ChangeDetectorRef\r\n\t) {\r\n\t\tthis.unsubscribe = new Subject();\r\n\t}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.initRegistrationForm();\r\n\t}\r\n\r\n\t/**\r\n\t * On destroy\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Form initalization\r\n\t * Default params, validators\r\n\t */\r\n\tinitRegistrationForm() {\r\n\t\tthis.forgotPasswordForm = this.fb.group({\r\n\t\t\temail: ['', Validators.compose([\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.minLength(3),\r\n\t\t\t\tValidators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n\t\t\t])\r\n\t\t\t]\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Form Submit\r\n\t */\r\n\tsubmit() {\r\n\t\tconst controls = this.forgotPasswordForm.controls;\r\n\t\t/** check form */\r\n\t\tif (this.forgotPasswordForm.invalid) {\r\n\t\t\tObject.keys(controls).forEach(controlName =>\r\n\t\t\t\tcontrols[controlName].markAsTouched()\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.loading = true;\r\n\r\n\t\tconst email = controls.email.value;\r\n\t\tthis.authService.requestPassword(email).pipe(\r\n\t\t\ttap(response => {\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tthis.authNoticeService.setNotice(this.translate.instant('AUTH.FORGOT.SUCCESS'), 'success');\r\n\t\t\t\t\tthis.router.navigateByUrl('/auth/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.authNoticeService.setNotice(this.translate.instant('AUTH.VALIDATION.NOT_FOUND', {name: this.translate.instant('AUTH.INPUT.EMAIL')}), 'danger');\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\ttakeUntil(this.unsubscribe),\r\n\t\t\tfinalize(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t\tthis.cdr.markForCheck();\r\n\t\t\t})\r\n\t\t).subscribe();\r\n\t}\r\n\r\n\t/**\r\n\t * Checking control validation\r\n\t *\r\n\t * @param controlName: string => Equals to formControlName\r\n\t * @param validationType: string => Equals to valitors name\r\n\t */\r\n\tisControlHasError(controlName: string, validationType: string): boolean {\r\n\t\tconst control = this.forgotPasswordForm.controls[controlName];\r\n\t\tif (!control) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst result =\r\n\t\t\tcontrol.hasError(validationType) &&\r\n\t\t\t(control.dirty || control.touched);\r\n\t\treturn result;\r\n\t}\r\n}\r\n","<div class=\"mt-30 mt-lg-0\">\r\n  <!--begin::Signin-->\r\n  <div class=\"login-form login-signin\">\r\n    <div class=\"text-center mb-10 mb-lg-20\">\r\n      <h3 class=\"font-size-h1\">Sign In</h3>\r\n      <p class=\"text-muted font-weight-bold\">\r\n        Enter your username and password\r\n      </p>\r\n    </div>\r\n\r\n    <kt-auth-notice></kt-auth-notice>\r\n\r\n    <!--begin::Form-->\r\n    <form class=\"form\" [formGroup]=\"userForm\" autocomplete=\"off\" novalidate=\"novalidate\" id=\"kt_login_form\">\r\n      <div class=\"form-group\">\r\n        <mat-form-field>\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput type=\"text\" placeholder=\"Mobile Number\" formControlName=\"username\"\r\n            autocomplete=\"off\" />\r\n          <mat-error *ngIf=\"isControlHasError('username', 'required')\">\r\n            <strong>{{ \"AUTH.VALIDATION.REQUIRED_FIELD\" | translate }}</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <mat-form-field>\r\n          <mat-label>Password</mat-label>\r\n          <input matInput type=\"password\" placeholder=\"{{ 'AUTH.INPUT.PASSWORD' | translate }}\"\r\n            formControlName=\"password\" autocomplete=\"off\" />\r\n          <mat-error *ngIf=\"isControlHasError('password', 'required')\">\r\n            <strong>{{ \"AUTH.VALIDATION.REQUIRED_FIELD\" | translate }}</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <!--begin::Action-->\r\n      <div class=\"form-group d-flex flex-wrap justify-content-between align-items-center\">\r\n        <a href=\"javascript:;\" routerLink=\"/auth/register\" [queryParams]=\"{type:'forgot'}\" class=\"text-dark-50 text-hover-primary my-3 mr-2\"\r\n          id=\"kt_login_forgot\">{{ \"AUTH.GENERAL.FORGOT_BUTTON\" | translate }}</a>\r\n        <button id=\"kt_login_signin_submit\" (click)=\"login()\" [ngClass]=\"{\r\n            'spinner spinner-right spinner-md spinner-light': loading\r\n          }\" class=\"btn btn-primary font-weight-bold px-9 py-4 my-3\">{{ \"AUTH.LOGIN.BUTTON\" | translate }}</button>\r\n      </div>\r\n      <!--end::Action-->\r\n    </form>\r\n    <!--end::Form-->\r\n  </div>\r\n  <!--end::Signin-->\r\n</div>","// Angular\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// RxJS\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { finalize, takeUntil, tap } from 'rxjs/operators';\r\n// Translate\r\nimport { TranslateService } from '@ngx-translate/core';\r\n// Store\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../../core/reducers';\r\n// Auth\r\nimport { AuthNoticeService, AuthService, Login } from '../../../../core/auth';\r\nimport { LoginService } from './login.service';\r\nimport { JwtService } from '../../../../jwt/jwt.service';\r\n\r\n/**\r\n * ! Just example => Should be removed in development\r\n */\r\nconst DEMO_PARAMS = {\r\n\tEMAIL: 'admin@demo.com',\r\n\tPASSWORD: 'demo'\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tencapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\t// Public params\r\n\tuserForm: FormGroup;\r\n\tloading = false;\r\n\tisLoggedIn$: Observable<boolean>;\r\n\terrors: any = [];\r\n\r\n\tprivate unsubscribe: Subject<any>;\r\n\r\n\tprivate returnUrl: any;\r\n\r\n\t// Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param router: Router\r\n\t * @param auth: AuthService\r\n\t * @param authNoticeService: AuthNoticeService\r\n\t * @param translate: TranslateService\r\n\t * @param store: Store<AppState>\r\n\t * @param fb: FormBuilder\r\n\t * @param cdr\r\n\t * @param route\r\n\t */\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate auth: AuthService,\r\n\t\tprivate authNoticeService: AuthNoticeService,\r\n\t\tprivate translate: TranslateService,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate cdr: ChangeDetectorRef,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate loginService: LoginService,\r\n\t\tprivate jwt: JwtService\r\n\t) {\r\n\t\tthis.unsubscribe = new Subject();\r\n\t}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit(): void {\r\n\t\tthis.initLoginForm();\r\n\r\n\t\t// redirect back to the returnUrl before login\r\n\t\tthis.route.queryParams.subscribe(params => {\r\n\t\t\tthis.returnUrl = params.returnUrl || '/';\r\n\t\t});\r\n\t\tthis.userForm = this.fb.group({\r\n\t\t  username: [''],\r\n\t\t  password: ['']\r\n\t\t});\r\n\t  }\r\n\t\r\n\t  login() {\r\n\t\tthis.loginService.login({params: this.userForm.value}).subscribe(success => {\r\n\t\t  console.log(success);\r\n\t\t  const user = success.result.data[0];\r\n\t\t  if (user.token) {\r\n\t\t\tthis.jwt.setToken(user.token);\r\n\t\t\twindow.localStorage.setItem('id', user.id);\r\n\t\t\tthis.router.navigateByUrl('nurse/profile');\r\n\t\t  }\r\n\t\t}, error => {\r\n\t\t  console.log(error);\r\n\t\t});\r\n\t  }\r\n\r\n\t/**\r\n\t * On destroy\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tthis.authNoticeService.setNotice(null);\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Form initalization\r\n\t * Default params, validators\r\n\t */\r\n\tinitLoginForm() {\r\n\t\t// demo message to show\r\n\t\tif (!this.authNoticeService.onNoticeChanged$.getValue()) {\r\n\t\t\tconst initialNotice = `Use account\r\n\t\t\t<strong>${DEMO_PARAMS.EMAIL}</strong> and password\r\n\t\t\t<strong>${DEMO_PARAMS.PASSWORD}</strong> to continue.`;\r\n\t\t\tthis.authNoticeService.setNotice(initialNotice, 'info');\r\n\t\t}\r\n\r\n\t\t// this.loginForm = this.fb.group({\r\n\t\t// \temail: [DEMO_PARAMS.EMAIL, Validators.compose([\r\n\t\t// \t\tValidators.required,\r\n\t\t// \t\tValidators.email,\r\n\t\t// \t\tValidators.minLength(3),\r\n\t\t// \t\tValidators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n\t\t// \t])\r\n\t\t// \t],\r\n\t\t// \tpassword: [DEMO_PARAMS.PASSWORD, Validators.compose([\r\n\t\t// \t\tValidators.required,\r\n\t\t// \t\tValidators.minLength(3),\r\n\t\t// \t\tValidators.maxLength(100)\r\n\t\t// \t])\r\n\t\t// \t]\r\n\t\t// });\r\n\t}\r\n\r\n\t/**\r\n\t * Form Submit\r\n\t */\r\n\t// submit() {\r\n\t// \tconst controls = this.loginForm.controls;\r\n\t// \t/** check form */\r\n\t// \tif (this.loginForm.invalid) {\r\n\t// \t\tObject.keys(controls).forEach(controlName =>\r\n\t// \t\t\tcontrols[controlName].markAsTouched()\r\n\t// \t\t);\r\n\t// \t\treturn;\r\n\t// \t}\r\n\r\n\t// \tthis.loading = true;\r\n\r\n\t// \tconst authData = {\r\n\t// \t\temail: controls.email.value,\r\n\t// \t\tpassword: controls.password.value\r\n\t// \t};\r\n\t// \tthis.auth\r\n\t// \t\t.login(authData.email, authData.password)\r\n\t// \t\t.pipe(\r\n\t// \t\t\ttap(user => {\r\n\t// \t\t\t\tif (user) {\r\n\t// \t\t\t\t\tthis.store.dispatch(new Login({authToken: user.accessToken}));\r\n\t// \t\t\t\t\tthis.router.navigateByUrl(this.returnUrl); // Main page\r\n\t// \t\t\t\t} else {\r\n\t// \t\t\t\t\tthis.authNoticeService.setNotice(this.translate.instant('AUTH.VALIDATION.INVALID_LOGIN'), 'danger');\r\n\t// \t\t\t\t}\r\n\t// \t\t\t}),\r\n\t// \t\t\ttakeUntil(this.unsubscribe),\r\n\t// \t\t\tfinalize(() => {\r\n\t// \t\t\t\tthis.loading = false;\r\n\t// \t\t\t\tthis.cdr.markForCheck();\r\n\t// \t\t\t})\r\n\t// \t\t)\r\n\t// \t\t.subscribe();\r\n\t// }\r\n\r\n\t/**\r\n\t * Checking control validation\r\n\t *\r\n\t * @param controlName: string => Equals to formControlName\r\n\t * @param validationType: string => Equals to valitors name\r\n\t */\r\n\tisControlHasError(controlName: string, validationType: string): boolean {\r\n\t\tconst control = this.userForm.controls[controlName];\r\n\t\tif (!control) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst result = control.hasError(validationType) && (control.dirty || control.touched);\r\n\t\treturn result;\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '../../../.../../../apiservice/api.service';\nimport { urls } from '../../../.../../../urls/urls';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private apiService: ApiService) { }\n\n  login(data): Observable<any> {\n    return this.apiService.post(urls.login, data);\n  }\n\n}\n","<div class=\"d-flex flex-column-fluid flex-center mt-30 mt-lg-0\">\r\n\t<div class=\"login-form login-signup\" style=\"display: block;\">\r\n\t\t<div class=\"text-center mb-10 mb-lg-20\">\r\n\t\t\t<h3 class=\"font-size-h1\">{{registerType}}</h3>\r\n\t\t\t<p class=\"text-muted font-weight-bold\">Enter your details to create your account</p>\r\n\t\t</div>\r\n\r\n\t\t<kt-auth-notice></kt-auth-notice>\r\n\r\n\t\t<form class=\"form\" [formGroup]=\"userForm\" autocomplete=\"off\">\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>Mobile Number</mat-label>\r\n\t\t\t\t\t<input matInput type=\"text\" placeholder=\"mobile\" formControlName=\"mobile\" />\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('mobile','required')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"form-group\" *ngIf=\"actionType == 'Verify OTP'\">\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>OTP</mat-label>\r\n\t\t\t\t\t<input matInput type=\"text\" placeholder=\"otp\" formControlName=\"otp\" />\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('otp','required')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group d-flex flex-wrap flex-center\">\r\n\t\t\t\t<button (click)=\"register()\" id=\"kt_login_signup_submit\"\r\n\t\t\t\t\tclass=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n\t\t\t\t\t[ngClass]=\"{'spinner spinner-right spinner-md spinner-light': loading}\">{{ 'AUTH.GENERAL.SUBMIT_BUTTON' | translate }}</button>\r\n\t\t\t\t<a href=\"/auth/login\" id=\"kt_login_signup_cancel\"\r\n\t\t\t\t\tclass=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\">Cancel</a>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","// Angular\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n// RxJS\r\nimport { finalize, takeUntil, tap } from 'rxjs/operators';\r\n// Translate\r\nimport { TranslateService } from '@ngx-translate/core';\r\n// NGRX\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../../core/reducers';\r\n// Auth\r\nimport { AuthNoticeService, AuthService, Register, User } from '../../../../core/auth/';\r\nimport { Subject } from 'rxjs';\r\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\r\nimport { RegisterService } from './register.service';\r\nimport { JwtService } from '../../../../jwt/jwt.service';\r\n\r\n@Component({\r\n\tselector: 'kt-register',\r\n\ttemplateUrl: './register.component.html',\r\n\tencapsulation: ViewEncapsulation.None\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n\tuserForm: FormGroup;\r\n\tloading = false;\r\n\terrors: any = [];\r\n\tactionType: string;\r\n\tregisterType: string;\r\n\r\n\tprivate unsubscribe: Subject<any>; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param authNoticeService: AuthNoticeService\r\n\t * @param translate: TranslateService\r\n\t * @param router: Router\r\n\t * @param auth: AuthService\r\n\t * @param store: Store<AppState>\r\n\t * @param fb: FormBuilder\r\n\t * @param cdr\r\n\t */\r\n\tconstructor(\r\n\t\tprivate authNoticeService: AuthNoticeService,\r\n\t\tprivate translate: TranslateService,\r\n\t\tprivate router: Router,\r\n\t\tprivate auth: AuthService,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate cdr: ChangeDetectorRef,\r\n\t\tprivate registerService: RegisterService,\r\n\t\tprivate jwt: JwtService,\r\n\t\tprivate activeRoute: ActivatedRoute\r\n\t) {\r\n\t\tthis.unsubscribe = new Subject();\r\n\t}\r\n\r\n\t/*\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n    */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.userForm = this.fb.group({\r\n\t\t\tmobile: ['', Validators.required]\r\n\t\t});\r\n\t\t// this.getIp();\r\n\t\tthis.actionType = 'Register';\r\n\t\tthis.activeRoute.queryParams.subscribe(param => {\r\n\t\t\tthis.registerType = (param && param.type === 'forgot') ? 'Forgot Password' : 'Register';\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n    * On destroy\r\n    */\r\n\tngOnDestroy(): void {\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checking control validation\r\n\t *\r\n\t * @param controlName: string => Equals to formControlName\r\n\t * @param validationType: string => Equals to valitors name\r\n\t */\r\n\tisControlHasError(controlName: string, validationType: string): boolean {\r\n\t\tconst control = this.userForm.controls[controlName];\r\n\t\tif (!control) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst result = control.hasError(validationType) && (control.dirty || control.touched);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tregister() {\r\n\t\tconst data = this.registerType === 'Forgot Password' ? { ...this.userForm.value, isForgot: true } : this.userForm.value;\r\n\t\tthis.registerService.registerUser(this.actionType, { params: data }).subscribe(response => {\r\n\t\t\tthis.checkVerificationStatus(response);\r\n\t\t}, error => {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\t}\r\n\r\n\t// getIp() {\r\n\t//   this.ipService.returnIp().subscribe(response => {\r\n\t//     this.dummy['ip'] = response['ip'];\r\n\t//   }, error => {\r\n\t//     console.log(error);\r\n\t//   });\r\n\t// }\r\n\r\n\tcheckVerificationStatus(response) {\r\n\t\tthis.userForm.addControl('otp', new FormControl('', Validators.required));\r\n\t\tthis.actionType = 'Verify OTP';\r\n\t\tthis.cdr.detectChanges();\r\n\t\tif (response.result.token) {\r\n\t\t\tthis.jwt.setToken(response.result.token);\r\n\t\t\tthis.router.navigateByUrl('auth/choose-password');\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '../../../../apiservice/api.service';\nimport { Observable } from 'rxjs';\nimport { urls } from '../../../../urls/urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private apiService: ApiService) { }\n\n  registerUser(type, data): Observable<any> {\n    const url = type === 'Register' ? urls.register: urls.verifyMobile;\n    return this.apiService.post(url, data);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AuthNoticeComponent } from './auth-notice/auth-notice.component';\nimport { ChoosePasswordComponent } from './choose-password/choose-password.component';\nimport { SubscriberComponent } from './subscriber.component';\n\n\nconst routes: Routes = [\n  {\n\t\tpath: '',\n\t\tcomponent: SubscriberComponent,\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tredirectTo: 'login',\n\t\t\t\tpathMatch: 'full'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'login',\n\t\t\t\tcomponent: LoginComponent,\n\t\t\t\tdata: {returnUrl: window.location.pathname}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'register',\n\t\t\t\tcomponent: RegisterComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'forgot-password',\n\t\t\t\tcomponent: ForgotPasswordComponent,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'choose-password',\n\t\t\t\tcomponent: ChoosePasswordComponent\n\t\t\t}\n\t\t]\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SubscriberRoutingModule { }\n","<div class=\"d-flex flex-column flex-root\" id=\"kt_login_wrapper\">\n\t<div class=\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-row-fluid bg-white\" id=\"kt_login\">\n\t\t<!--begin::Aside-->\n\t\t<div class=\"login-aside d-flex flex-row-auto bgi-size-cover bgi-no-repeat p-10 p-lg-10\"\n\t\t\tstyle=\"background-image: url(./assets/media//bg/bg-4.jpg);\">\n\t\t\t<!--begin: Aside Container-->\n\t\t\t<div class=\"d-flex flex-row-fluid flex-column justify-content-between\">\n\t\t\t\t<!--begin: Aside header-->\n\t\t\t\t<a href=\"#\" class=\"flex-column-auto mt-5\">\n\t\t\t\t\t<img src=\"./assets/media/logos/logo-letter-1.png\" class=\"max-h-70px\" />\n\t\t\t\t</a>\n\t\t\t\t<!--end: Aside header-->\n\n\t\t\t\t<!--begin: Aside content-->\n\t\t\t\t<div class=\"flex-column-fluid d-flex flex-column justify-content-center\">\n\t\t\t\t\t<h3 class=\"font-size-h1 mb-5 text-white\">Welcome to Metronic!</h3>\n\t\t\t\t\t<p class=\"font-weight-lighter text-white opacity-80\">\n\t\t\t\t\t\tThe ultimate Bootstrap, Angular 8, React & VueJS admin theme framework for next generation web\n\t\t\t\t\t\tapps.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<!--end: Aside content-->\n\n\t\t\t\t<!--begin: Aside footer for desktop-->\n\t\t\t\t<div class=\"d-none flex-column-auto d-lg-flex justify-content-between mt-10\">\n\t\t\t\t\t<div class=\"opacity-70 font-weight-bold\ttext-white\">\n\t\t\t\t\t\t&copy; 2020 Metronic\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"d-flex\">\n\t\t\t\t\t\t<a href=\"#\" class=\"text-white\">Privacy</a>\n\t\t\t\t\t\t<a href=\"#\" class=\"text-white ml-10\">Legal</a>\n\t\t\t\t\t\t<a href=\"#\" class=\"text-white ml-10\">Contact</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!--end: Aside footer for desktop-->\n\t\t\t</div>\n\n\t\t</div>\n\t\t<!--begin::Aside-->\n\n\t\t<!--begin::Content-->\n\t\t<div class=\"flex-row-fluid d-flex flex-column position-relative p-7 overflow-hidden\">\n\t\t\t<!--begin::Content header-->\n\t\t\t<div\n\t\t\t\tclass=\"position-absolute top-0 right-0 text-right mt-5 mb-15 mb-lg-0 flex-column-auto justify-content-center py-5 px-10\"\n\t\t\t>\n\t\t\t\t<span class=\"font-weight-bold text-dark-50\">\n\t\t\t\t\tDon't have an account yet?\n\t\t\t\t</span>\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:;\"\n\t\t\t\t\trouterLink=\"/auth/register\"\n\t\t\t\t\tclass=\"font-weight-bold ml-2\"\n\t\t\t\t\tid=\"kt_login_signup\"\n\t\t\t\t>{{ \"AUTH.GENERAL.SIGNUP_BUTTON\" | translate }}</a>\n\t\t\t</div>\n\t\t\t<!--end::Content header-->\n\t\t\t\n\t\t\t<router-outlet></router-outlet>\n\t\t\t<!--begin::Content footer for mobile-->\n\t\t\t<div\n\t\t\t\tclass=\"d-flex d-lg-none flex-column-auto flex-column flex-sm-row justify-content-between align-items-center mt-5 p-5\">\n\t\t\t\t<div class=\"text-dark-50 font-weight-bold order-2 order-sm-1 my-2\">\n\t\t\t\t\t&copy; 2020 Metronic\n\t\t\t\t</div>\n\t\t\t\t<div class=\"d-flex order-1 order-sm-2 my-2\">\n\t\t\t\t\t<a href=\"#\" class=\"text-dark-75 text-hover-primary\">Privacy</a>\n\t\t\t\t\t<a href=\"#\" class=\"text-dark-75 text-hover-primary ml-4\">Legal</a>\n\t\t\t\t\t<a href=\"#\" class=\"text-dark-75 text-hover-primary ml-4\">Contact</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<!--end::Content footer for mobile-->\n\t\t</div>\n\t\t<!--end::Content-->\n\t</div>\n</div>","// Angular\nimport { Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n// Layout\nimport { LayoutConfigService, SplashScreenService, TranslationService } from '../../../core/_base/layout';\n// Auth\nimport { AuthNoticeService } from '../../../core/auth';\n\n@Component({\n  selector: 'kt-subscriber',\n  templateUrl: './subscriber.component.html',\n  styleUrls: ['./subscriber.component.scss'],\n\tencapsulation: ViewEncapsulation.None\n\n})\nexport class SubscriberComponent implements OnInit {\n\n  today: number = Date.now();\n\theaderLogo: string;\n\n  constructor(private el: ElementRef,\n\t\tprivate render: Renderer2,\n\t\tprivate layoutConfigService: LayoutConfigService,\n\t\tpublic authNoticeService: AuthNoticeService,\n\t\tprivate translationService: TranslationService,\n\t\tprivate splashScreenService: SplashScreenService) { }\n\n  ngOnInit(): void {\n    this.translationService.setLanguage(this.translationService.getSelectedLanguage());\n\t\tthis.headerLogo = this.layoutConfigService.getLogo();\n\n\t\tthis.splashScreenService.hide();\n  }\n\n  private loadCSS(styleUrl: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst styleElement = document.createElement('link');\n\t\t\tstyleElement.href = styleUrl;\n\t\t\tstyleElement.type = 'text/css';\n\t\t\tstyleElement.rel = 'stylesheet';\n\t\t\tstyleElement.onload = resolve;\n\t\t\tthis.render.appendChild(this.el.nativeElement, styleElement);\n\t\t});\n\t}\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n// Material\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n// Translate\nimport { TranslateModule } from '@ngx-translate/core';\n// NGRX\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n// CRUD\nimport { InterceptService } from '../../../core/_base/crud/';\n// Module components\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AuthNoticeComponent } from './auth-notice/auth-notice.component';\nimport { ChoosePasswordComponent } from './choose-password/choose-password.component';\n// Auth\nimport { AuthEffects, AuthGuard, authReducer, AuthService } from '../../../core/auth';\n\nimport { SubscriberRoutingModule } from './subscriber-routing.module';\nimport { SubscriberComponent } from './subscriber.component';\n\n\n@NgModule({\n  declarations: [\n    SubscriberComponent,\n    LoginComponent,\n\t\tRegisterComponent,\n\t\tForgotPasswordComponent,\n\t\tAuthNoticeComponent,\n\t\tChoosePasswordComponent\n  ],\n  imports: [\n    CommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tMatButtonModule,\n\t\tMatInputModule,\n\t\tMatFormFieldModule,\n\t\tMatCheckboxModule,\n\t\tTranslateModule.forChild(),\n\t\tStoreModule.forFeature('auth', authReducer),\n\t\tEffectsModule.forFeature([AuthEffects]),\n    SubscriberRoutingModule\n  ]\n})\nexport class SubscriberModule { }\n"]}