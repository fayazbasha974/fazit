{"version":3,"sources":["./src/app/views/pages/subscriber/auth-notice/auth-notice.component.html","./src/app/views/pages/subscriber/auth-notice/auth-notice.component.ts","./src/app/views/pages/subscriber/choose-password/choose-password.component.html","./src/app/views/pages/subscriber/choose-password/choose-password.component.ts","./src/app/views/pages/subscriber/choose-password/password.service.ts","./src/app/views/pages/subscriber/forgot-password/forgot-password.component.html","./src/app/views/pages/subscriber/forgot-password/forgot-password.component.ts","./src/app/views/pages/subscriber/login/login.component.html","./src/app/views/pages/subscriber/login/login.component.ts","./src/app/views/pages/subscriber/login/login.service.ts","./src/app/views/pages/subscriber/register/register.component.html","./src/app/views/pages/subscriber/register/register.component.ts","./src/app/views/pages/subscriber/register/register.service.ts","./src/app/views/pages/subscriber/subscriber-routing.module.ts","./src/app/views/pages/subscriber/subscriber.component.html","./src/app/views/pages/subscriber/subscriber.component.ts","./src/app/views/pages/subscriber/subscriber.module.ts"],"names":[],"mappings":"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","file":"views-pages-subscriber-subscriber-module-ngfactory-es2015.js","sourcesContent":["<div [hidden]=\"!message\" class=\"alert alert-{{type}}\" role=\"alert\" #alertNotice>\r\n\t<div class=\"alert-text\" [innerHTML]=\"message\"></div>\r\n</div>\r\n","// Angular\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, Output } from '@angular/core';\r\n// RxJS\r\nimport { Subscription } from 'rxjs';\r\n// Auth\r\nimport { AuthNotice, AuthNoticeService } from '../../../../core/auth/';\r\n\r\n@Component({\r\n\tselector: 'kt-auth-notice',\r\n\ttemplateUrl: './auth-notice.component.html',\r\n})\r\nexport class AuthNoticeComponent implements OnInit, OnDestroy {\r\n\t@Output() type: any;\r\n\t@Output() message: any = '';\r\n\r\n\t// Private properties\r\n\tprivate subscriptions: Subscription[] = [];\r\n\r\n\t/**\r\n\t * Component Constructure\r\n\t *\r\n\t * @param authNoticeService\r\n\t * @param cdr\r\n\t */\r\n\tconstructor(public authNoticeService: AuthNoticeService, private cdr: ChangeDetectorRef) {\r\n\t}\r\n\r\n\t/*\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n    */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.subscriptions.push(this.authNoticeService.onNoticeChanged$.subscribe(\r\n\t\t\t(notice: AuthNotice) => {\r\n\t\t\t\tnotice = Object.assign({}, {message: '', type: ''}, notice);\r\n\t\t\t\tthis.message = notice.message;\r\n\t\t\t\tthis.type = notice.type;\r\n\t\t\t\tthis.cdr.markForCheck();\r\n\t\t\t}\r\n\t\t));\r\n\t}\r\n\r\n\t/**\r\n\t * On destroy\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tthis.subscriptions.forEach(sb => sb.unsubscribe());\r\n\t}\r\n}\r\n","<!--begin::Body-->\n<div class=\"d-flex flex-column-fluid flex-center mt-30 mt-lg-0 height-100\">\n\t<!--begin::Signin-->\n\t<div class=\"login-form login-signin\">\n\t\t<div class=\"text-center mb-10 mb-lg-20\">\n\t\t\t<h3 class=\"font-size-h1\">Choose Password</h3>\n\t\t\t<!-- <p class=\"text-muted font-weight-semi-bold\">Enter your email to reset your password</p> -->\n\t\t</div>\n\n\t\t<kt-auth-notice></kt-auth-notice>\n\n\t\t<form class=\"form\" [formGroup]=\"passwords\" autocomplete=\"off\">\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-label>Password</mat-label>\n\t\t\t\t\t<input matInput type=\"password\" placeholder=\"Password\"\n\t\t\t\t\t\tformControlName=\"new_pwd\" autocomplete=\"off\" />\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('password','required')\">\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\n\t\t\t\t\t</mat-error>\n\t\t\t\t</mat-form-field>\n            </div>\n            <div class=\"form-group\">\n\t\t\t\t<mat-form-field>\n\t\t\t\t\t<mat-label>Confirm Password</mat-label>\n\t\t\t\t\t<input matInput type=\"password\" placeholder=\"Confirm Password\"\n\t\t\t\t\t\tformControlName=\"conf_pwd\" autocomplete=\"off\" />\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('password','required')\">\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\n\t\t\t\t\t</mat-error>\n\t\t\t\t</mat-form-field>\n\t\t\t</div>\n\t\t\t<!--begin::Action-->\n\t\t\t<div class=\"fform-group d-flex flex-wrap flex-center\">\n\t\t\t\t<button (click)=\"choosePassword()\" id=\"kt_login_forgot_submit\"\n\t\t\t\t\tclass=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\n\t\t\t\t\t[ngClass]=\"{'spinner spinner-right spinner-md spinner-light': loading}\">{{ 'AUTH.GENERAL.SUBMIT_BUTTON' | translate }}</button>\n\n\t\t\t\t<a href=\"/auth/login\" id=\"kt_login_signup_cancel\"\n\t\t\t\t\tclass=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\">{{ 'AUTH.GENERAL.BACK_BUTTON' | translate }}</a>\n\n\t\t\t</div>\n\t\t\t<!--end::Action-->\n\t\t</form>\n\t</div>\n</div>","// Angular\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n// RxJS\nimport { finalize, takeUntil, tap } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n// Translate\nimport { TranslateService } from '@ngx-translate/core';\n// Auth\nimport { AuthNoticeService, AuthService } from '../../../../core/auth';\nimport { PasswordService } from './password.service';\n\n@Component({\n    selector: 'kt-choose-password',\n    templateUrl: './choose-password.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ChoosePasswordComponent implements OnInit, OnDestroy {\n    // Public params\n    forgotPasswordForm: FormGroup;\n    passwords: FormGroup;\n    loading = false;\n    errors: any = [];\n\n    private unsubscribe: Subject<any>; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n\t/**\n\t * Component constructor\n\t *\n\t * @param authService\n\t * @param authNoticeService\n\t * @param translate\n\t * @param router\n\t * @param fb\n\t * @param cdr\n\t */\n    constructor(\n        private authService: AuthService,\n        public authNoticeService: AuthNoticeService,\n        private translate: TranslateService,\n        private router: Router,\n        private fb: FormBuilder,\n        private cdr: ChangeDetectorRef,\n        private passwordService: PasswordService\n    ) {\n        this.unsubscribe = new Subject();\n    }\n\n\t/**\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\n\t */\n\n\t/**\n\t * On init\n\t */\n    ngOnInit() {\n        this.initRegistrationForm();\n        this.passwords = this.fb.group({\n            new_pwd: [''],\n            conf_pwd: ['']\n        });\n    }\n\n    choosePassword() {\n        this.passwordService.choosePassword({ params: this.passwords.value }).subscribe(response => {\n            console.log(response);\n            this.router.navigateByUrl('nurse/profile');\n        }, error => {\n            console.log(error);\n        })\n    }\n\n\t/**\n\t * On destroy\n\t */\n    ngOnDestroy(): void {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n        this.loading = false;\n    }\n\n\t/**\n\t * Form initalization\n\t * Default params, validators\n\t */\n    initRegistrationForm() {\n        this.forgotPasswordForm = this.fb.group({\n            email: ['', Validators.compose([\n                Validators.required,\n                Validators.email,\n                Validators.minLength(3),\n                Validators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n            ])\n            ]\n        });\n    }\n\n\t/**\n\t * Form Submit\n\t */\n    submit() {\n        const controls = this.forgotPasswordForm.controls;\n        /** check form */\n        if (this.forgotPasswordForm.invalid) {\n            Object.keys(controls).forEach(controlName =>\n                controls[controlName].markAsTouched()\n            );\n            return;\n        }\n\n        this.loading = true;\n\n        const email = controls.email.value;\n        this.authService.requestPassword(email).pipe(\n            tap(response => {\n                if (response) {\n                    this.authNoticeService.setNotice(this.translate.instant('AUTH.FORGOT.SUCCESS'), 'success');\n                    this.router.navigateByUrl('/auth/login');\n                } else {\n                    this.authNoticeService.setNotice(this.translate.instant('AUTH.VALIDATION.NOT_FOUND', { name: this.translate.instant('AUTH.INPUT.EMAIL') }), 'danger');\n                }\n            }),\n            takeUntil(this.unsubscribe),\n            finalize(() => {\n                this.loading = false;\n                this.cdr.markForCheck();\n            })\n        ).subscribe();\n    }\n\n\t/**\n\t * Checking control validation\n\t *\n\t * @param controlName: string => Equals to formControlName\n\t * @param validationType: string => Equals to valitors name\n\t */\n    isControlHasError(controlName: string, validationType: string): boolean {\n        const control = this.forgotPasswordForm.controls[controlName];\n        if (!control) {\n            return false;\n        }\n\n        const result =\n            control.hasError(validationType) &&\n            (control.dirty || control.touched);\n        return result;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '../../../../apiservice/api.service';\nimport { Observable } from 'rxjs';\nimport { urls } from '../../../../urls/urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PasswordService {\n\n  constructor(private apiService: ApiService) { }\n\n  choosePassword(data): Observable<any> {\n    return this.apiService.post(urls.changePassword, data);\n  }\n\n}\n","<!--begin::Body-->\r\n<div class=\"d-flex flex-column-fluid flex-center mt-30 mt-lg-0 height-100\">\r\n\t<!--begin::Signin-->\r\n\t<div class=\"login-form login-signin\">\r\n\t\t<div class=\"text-center mb-10 mb-lg-20\">\r\n\t\t\t<h3 class=\"font-size-h1\">{{ 'AUTH.FORGOT.TITLE' | translate }}</h3>\r\n\t\t\t<p class=\"text-muted font-weight-semi-bold\">Enter your email to reset your password</p>\r\n\t\t</div>\r\n\r\n\t\t<kt-auth-notice></kt-auth-notice>\r\n\r\n\t\t<form class=\"form\" [formGroup]=\"forgotPasswordForm\" autocomplete=\"off\">\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>{{ 'AUTH.INPUT.EMAIL' | translate }}</mat-label>\r\n\t\t\t\t\t<input matInput type=\"email\" placeholder=\"{{ 'AUTH.INPUT.EMAIL' | translate }}\"\r\n\t\t\t\t\t\tformControlName=\"email\" autocomplete=\"off\" />\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('email','required')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('email','email')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.INVALID_FIELD' | translate }}</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('email','minLength')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.MIN_LENGTH_FIELD' | translate }} 3</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('email','maxLength')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.MAX_LENGTH_FIELD' | translate }} 320</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<!--begin::Action-->\r\n\t\t\t<div class=\"fform-group d-flex flex-wrap flex-center\">\r\n\t\t\t\t<button (click)=\"submit()\" id=\"kt_login_forgot_submit\"\r\n\t\t\t\t\tclass=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n\t\t\t\t\t[ngClass]=\"{'spinner spinner-right spinner-md spinner-light': loading}\">{{ 'AUTH.GENERAL.SUBMIT_BUTTON' | translate }}</button>\r\n\r\n\t\t\t\t<a href=\"/auth/login\" id=\"kt_login_signup_cancel\"\r\n\t\t\t\t\tclass=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\">{{ 'AUTH.GENERAL.BACK_BUTTON' | translate }}</a>\r\n\r\n\t\t\t</div>\r\n\t\t\t<!--end::Action-->\r\n\t\t</form>\r\n\t</div>\r\n</div>","// Angular\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n// RxJS\r\nimport { finalize, takeUntil, tap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n// Translate\r\nimport { TranslateService } from '@ngx-translate/core';\r\n// Auth\r\nimport { AuthNoticeService, AuthService } from '../../../../core/auth';\r\n\r\n@Component({\r\n\tselector: 'kt-forgot-password',\r\n\ttemplateUrl: './forgot-password.component.html',\r\n\tencapsulation: ViewEncapsulation.None\r\n})\r\nexport class ForgotPasswordComponent implements OnInit, OnDestroy {\r\n\t// Public params\r\n\tforgotPasswordForm: FormGroup;\r\n\tloading = false;\r\n\terrors: any = [];\r\n\r\n\tprivate unsubscribe: Subject<any>; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param authService\r\n\t * @param authNoticeService\r\n\t * @param translate\r\n\t * @param router\r\n\t * @param fb\r\n\t * @param cdr\r\n\t */\r\n\tconstructor(\r\n\t\tprivate authService: AuthService,\r\n\t\tpublic authNoticeService: AuthNoticeService,\r\n\t\tprivate translate: TranslateService,\r\n\t\tprivate router: Router,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate cdr: ChangeDetectorRef\r\n\t) {\r\n\t\tthis.unsubscribe = new Subject();\r\n\t}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.initRegistrationForm();\r\n\t}\r\n\r\n\t/**\r\n\t * On destroy\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Form initalization\r\n\t * Default params, validators\r\n\t */\r\n\tinitRegistrationForm() {\r\n\t\tthis.forgotPasswordForm = this.fb.group({\r\n\t\t\temail: ['', Validators.compose([\r\n\t\t\t\tValidators.required,\r\n\t\t\t\tValidators.email,\r\n\t\t\t\tValidators.minLength(3),\r\n\t\t\t\tValidators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n\t\t\t])\r\n\t\t\t]\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Form Submit\r\n\t */\r\n\tsubmit() {\r\n\t\tconst controls = this.forgotPasswordForm.controls;\r\n\t\t/** check form */\r\n\t\tif (this.forgotPasswordForm.invalid) {\r\n\t\t\tObject.keys(controls).forEach(controlName =>\r\n\t\t\t\tcontrols[controlName].markAsTouched()\r\n\t\t\t);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.loading = true;\r\n\r\n\t\tconst email = controls.email.value;\r\n\t\tthis.authService.requestPassword(email).pipe(\r\n\t\t\ttap(response => {\r\n\t\t\t\tif (response) {\r\n\t\t\t\t\tthis.authNoticeService.setNotice(this.translate.instant('AUTH.FORGOT.SUCCESS'), 'success');\r\n\t\t\t\t\tthis.router.navigateByUrl('/auth/login');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.authNoticeService.setNotice(this.translate.instant('AUTH.VALIDATION.NOT_FOUND', {name: this.translate.instant('AUTH.INPUT.EMAIL')}), 'danger');\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\ttakeUntil(this.unsubscribe),\r\n\t\t\tfinalize(() => {\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t\tthis.cdr.markForCheck();\r\n\t\t\t})\r\n\t\t).subscribe();\r\n\t}\r\n\r\n\t/**\r\n\t * Checking control validation\r\n\t *\r\n\t * @param controlName: string => Equals to formControlName\r\n\t * @param validationType: string => Equals to valitors name\r\n\t */\r\n\tisControlHasError(controlName: string, validationType: string): boolean {\r\n\t\tconst control = this.forgotPasswordForm.controls[controlName];\r\n\t\tif (!control) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst result =\r\n\t\t\tcontrol.hasError(validationType) &&\r\n\t\t\t(control.dirty || control.touched);\r\n\t\treturn result;\r\n\t}\r\n}\r\n","<div class=\"mt-30 mt-lg-0\">\r\n  <!--begin::Signin-->\r\n  <div class=\"login-form login-signin\">\r\n    <div class=\"text-center mb-10 mb-lg-20\">\r\n      <h3 class=\"font-size-h1\">Sign In</h3>\r\n      <p class=\"text-muted font-weight-bold\">\r\n        Enter your username and password\r\n      </p>\r\n    </div>\r\n\r\n    <kt-auth-notice></kt-auth-notice>\r\n\r\n    <!--begin::Form-->\r\n    <form class=\"form\" [formGroup]=\"userForm\" autocomplete=\"off\" novalidate=\"novalidate\" id=\"kt_login_form\">\r\n      <div class=\"form-group\">\r\n        <mat-form-field>\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput type=\"text\" placeholder=\"Mobile Number\" formControlName=\"username\"\r\n            autocomplete=\"off\" />\r\n          <mat-error *ngIf=\"isControlHasError('username', 'required')\">\r\n            <strong>{{ \"AUTH.VALIDATION.REQUIRED_FIELD\" | translate }}</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <mat-form-field>\r\n          <mat-label>Password</mat-label>\r\n          <input matInput type=\"password\" placeholder=\"{{ 'AUTH.INPUT.PASSWORD' | translate }}\"\r\n            formControlName=\"password\" autocomplete=\"off\" />\r\n          <mat-error *ngIf=\"isControlHasError('password', 'required')\">\r\n            <strong>{{ \"AUTH.VALIDATION.REQUIRED_FIELD\" | translate }}</strong>\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <!--begin::Action-->\r\n      <div class=\"form-group d-flex flex-wrap justify-content-between align-items-center\">\r\n        <a href=\"javascript:;\" routerLink=\"/auth/register\" [queryParams]=\"{type:'forgot'}\" class=\"text-dark-50 text-hover-primary my-3 mr-2\"\r\n          id=\"kt_login_forgot\">{{ \"AUTH.GENERAL.FORGOT_BUTTON\" | translate }}</a>\r\n        <button id=\"kt_login_signin_submit\" (click)=\"login()\" [ngClass]=\"{\r\n            'spinner spinner-right spinner-md spinner-light': loading\r\n          }\" class=\"btn btn-primary font-weight-bold px-9 py-4 my-3\">{{ \"AUTH.LOGIN.BUTTON\" | translate }}</button>\r\n      </div>\r\n      <!--end::Action-->\r\n    </form>\r\n    <!--end::Form-->\r\n  </div>\r\n  <!--end::Signin-->\r\n</div>","// Angular\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// RxJS\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { finalize, takeUntil, tap } from 'rxjs/operators';\r\n// Translate\r\nimport { TranslateService } from '@ngx-translate/core';\r\n// Store\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../../core/reducers';\r\n// Auth\r\nimport { AuthNoticeService, AuthService, Login } from '../../../../core/auth';\r\nimport { LoginService } from './login.service';\r\nimport { JwtService } from '../../../../jwt/jwt.service';\r\n\r\n/**\r\n * ! Just example => Should be removed in development\r\n */\r\nconst DEMO_PARAMS = {\r\n\tEMAIL: 'admin@demo.com',\r\n\tPASSWORD: 'demo'\r\n};\r\n\r\n@Component({\r\n\tselector: 'kt-login',\r\n\ttemplateUrl: './login.component.html',\r\n\tencapsulation: ViewEncapsulation.None\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\t// Public params\r\n\tuserForm: FormGroup;\r\n\tloading = false;\r\n\tisLoggedIn$: Observable<boolean>;\r\n\terrors: any = [];\r\n\r\n\tprivate unsubscribe: Subject<any>;\r\n\r\n\tprivate returnUrl: any;\r\n\r\n\t// Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param router: Router\r\n\t * @param auth: AuthService\r\n\t * @param authNoticeService: AuthNoticeService\r\n\t * @param translate: TranslateService\r\n\t * @param store: Store<AppState>\r\n\t * @param fb: FormBuilder\r\n\t * @param cdr\r\n\t * @param route\r\n\t */\r\n\tconstructor(\r\n\t\tprivate router: Router,\r\n\t\tprivate auth: AuthService,\r\n\t\tprivate authNoticeService: AuthNoticeService,\r\n\t\tprivate translate: TranslateService,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate cdr: ChangeDetectorRef,\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate loginService: LoginService,\r\n\t\tprivate jwt: JwtService\r\n\t) {\r\n\t\tthis.unsubscribe = new Subject();\r\n\t}\r\n\r\n\t/**\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n\t */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit(): void {\r\n\t\tthis.initLoginForm();\r\n\r\n\t\t// redirect back to the returnUrl before login\r\n\t\tthis.route.queryParams.subscribe(params => {\r\n\t\t\tthis.returnUrl = params.returnUrl || '/';\r\n\t\t});\r\n\t\tthis.userForm = this.fb.group({\r\n\t\t  username: [''],\r\n\t\t  password: ['']\r\n\t\t});\r\n\t  }\r\n\t\r\n\t  login() {\r\n\t\tthis.loginService.login({params: this.userForm.value}).subscribe(success => {\r\n\t\t  console.log(success);\r\n\t\t  const user = success.result.data[0];\r\n\t\t  if (user.token) {\r\n\t\t\tthis.jwt.setToken(user.token);\r\n\t\t\twindow.localStorage.setItem('id', user.id);\r\n\t\t\tthis.router.navigateByUrl('nurse/profile');\r\n\t\t  }\r\n\t\t}, error => {\r\n\t\t  console.log(error);\r\n\t\t});\r\n\t  }\r\n\r\n\t/**\r\n\t * On destroy\r\n\t */\r\n\tngOnDestroy(): void {\r\n\t\tthis.authNoticeService.setNotice(null);\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Form initalization\r\n\t * Default params, validators\r\n\t */\r\n\tinitLoginForm() {\r\n\t\t// demo message to show\r\n\t\tif (!this.authNoticeService.onNoticeChanged$.getValue()) {\r\n\t\t\tconst initialNotice = `Use account\r\n\t\t\t<strong>${DEMO_PARAMS.EMAIL}</strong> and password\r\n\t\t\t<strong>${DEMO_PARAMS.PASSWORD}</strong> to continue.`;\r\n\t\t\tthis.authNoticeService.setNotice(initialNotice, 'info');\r\n\t\t}\r\n\r\n\t\t// this.loginForm = this.fb.group({\r\n\t\t// \temail: [DEMO_PARAMS.EMAIL, Validators.compose([\r\n\t\t// \t\tValidators.required,\r\n\t\t// \t\tValidators.email,\r\n\t\t// \t\tValidators.minLength(3),\r\n\t\t// \t\tValidators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n\t\t// \t])\r\n\t\t// \t],\r\n\t\t// \tpassword: [DEMO_PARAMS.PASSWORD, Validators.compose([\r\n\t\t// \t\tValidators.required,\r\n\t\t// \t\tValidators.minLength(3),\r\n\t\t// \t\tValidators.maxLength(100)\r\n\t\t// \t])\r\n\t\t// \t]\r\n\t\t// });\r\n\t}\r\n\r\n\t/**\r\n\t * Form Submit\r\n\t */\r\n\t// submit() {\r\n\t// \tconst controls = this.loginForm.controls;\r\n\t// \t/** check form */\r\n\t// \tif (this.loginForm.invalid) {\r\n\t// \t\tObject.keys(controls).forEach(controlName =>\r\n\t// \t\t\tcontrols[controlName].markAsTouched()\r\n\t// \t\t);\r\n\t// \t\treturn;\r\n\t// \t}\r\n\r\n\t// \tthis.loading = true;\r\n\r\n\t// \tconst authData = {\r\n\t// \t\temail: controls.email.value,\r\n\t// \t\tpassword: controls.password.value\r\n\t// \t};\r\n\t// \tthis.auth\r\n\t// \t\t.login(authData.email, authData.password)\r\n\t// \t\t.pipe(\r\n\t// \t\t\ttap(user => {\r\n\t// \t\t\t\tif (user) {\r\n\t// \t\t\t\t\tthis.store.dispatch(new Login({authToken: user.accessToken}));\r\n\t// \t\t\t\t\tthis.router.navigateByUrl(this.returnUrl); // Main page\r\n\t// \t\t\t\t} else {\r\n\t// \t\t\t\t\tthis.authNoticeService.setNotice(this.translate.instant('AUTH.VALIDATION.INVALID_LOGIN'), 'danger');\r\n\t// \t\t\t\t}\r\n\t// \t\t\t}),\r\n\t// \t\t\ttakeUntil(this.unsubscribe),\r\n\t// \t\t\tfinalize(() => {\r\n\t// \t\t\t\tthis.loading = false;\r\n\t// \t\t\t\tthis.cdr.markForCheck();\r\n\t// \t\t\t})\r\n\t// \t\t)\r\n\t// \t\t.subscribe();\r\n\t// }\r\n\r\n\t/**\r\n\t * Checking control validation\r\n\t *\r\n\t * @param controlName: string => Equals to formControlName\r\n\t * @param validationType: string => Equals to valitors name\r\n\t */\r\n\tisControlHasError(controlName: string, validationType: string): boolean {\r\n\t\tconst control = this.userForm.controls[controlName];\r\n\t\tif (!control) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst result = control.hasError(validationType) && (control.dirty || control.touched);\r\n\t\treturn result;\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '../../../.../../../apiservice/api.service';\nimport { urls } from '../../../.../../../urls/urls';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private apiService: ApiService) { }\n\n  login(data): Observable<any> {\n    return this.apiService.post(urls.login, data);\n  }\n\n}\n","<div class=\"d-flex flex-column-fluid flex-center mt-30 mt-lg-0\">\r\n\t<div class=\"login-form login-signup\" style=\"display: block;\">\r\n\t\t<div class=\"text-center mb-10 mb-lg-20\">\r\n\t\t\t<h3 class=\"font-size-h1\">{{registerType}}</h3>\r\n\t\t\t<p class=\"text-muted font-weight-bold\">Enter your details to create your account</p>\r\n\t\t</div>\r\n\r\n\t\t<kt-auth-notice></kt-auth-notice>\r\n\r\n\t\t<form class=\"form\" [formGroup]=\"userForm\" autocomplete=\"off\">\r\n\t\t\t<div class=\"form-group\">\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>Mobile Number</mat-label>\r\n\t\t\t\t\t<input matInput type=\"text\" placeholder=\"mobile\" formControlName=\"mobile\" />\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('mobile','required')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"form-group\" *ngIf=\"actionType == 'Verify OTP'\">\r\n\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t<mat-label>OTP</mat-label>\r\n\t\t\t\t\t<input matInput type=\"text\" placeholder=\"otp\" formControlName=\"otp\" />\r\n\t\t\t\t\t<mat-error *ngIf=\"isControlHasError('otp','required')\">\r\n\t\t\t\t\t\t<strong>{{ 'AUTH.VALIDATION.REQUIRED_FIELD' | translate }}</strong>\r\n\t\t\t\t\t</mat-error>\r\n\t\t\t\t</mat-form-field>\r\n\t\t\t</div>\r\n\t\t\t<div class=\"form-group d-flex flex-wrap flex-center\">\r\n\t\t\t\t<button (click)=\"register()\" id=\"kt_login_signup_submit\"\r\n\t\t\t\t\tclass=\"btn btn-primary font-weight-bold px-9 py-4 my-3 mx-4\"\r\n\t\t\t\t\t[ngClass]=\"{'spinner spinner-right spinner-md spinner-light': loading}\">{{ 'AUTH.GENERAL.SUBMIT_BUTTON' | translate }}</button>\r\n\t\t\t\t<a href=\"/auth/login\" id=\"kt_login_signup_cancel\"\r\n\t\t\t\t\tclass=\"btn btn-light-primary font-weight-bold px-9 py-4 my-3 mx-4\">Cancel</a>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t</div>\r\n</div>","// Angular\r\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\n// RxJS\r\nimport { finalize, takeUntil, tap } from 'rxjs/operators';\r\n// Translate\r\nimport { TranslateService } from '@ngx-translate/core';\r\n// NGRX\r\nimport { Store } from '@ngrx/store';\r\nimport { AppState } from '../../../../core/reducers';\r\n// Auth\r\nimport { AuthNoticeService, AuthService, Register, User } from '../../../../core/auth/';\r\nimport { Subject } from 'rxjs';\r\nimport { ConfirmPasswordValidator } from './confirm-password.validator';\r\nimport { RegisterService } from './register.service';\r\nimport { JwtService } from '../../../../jwt/jwt.service';\r\n\r\n@Component({\r\n\tselector: 'kt-register',\r\n\ttemplateUrl: './register.component.html',\r\n\tencapsulation: ViewEncapsulation.None\r\n})\r\nexport class RegisterComponent implements OnInit, OnDestroy {\r\n\tuserForm: FormGroup;\r\n\tloading = false;\r\n\terrors: any = [];\r\n\tactionType: string;\r\n\tregisterType: string;\r\n\r\n\tprivate unsubscribe: Subject<any>; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n\t/**\r\n\t * Component constructor\r\n\t *\r\n\t * @param authNoticeService: AuthNoticeService\r\n\t * @param translate: TranslateService\r\n\t * @param router: Router\r\n\t * @param auth: AuthService\r\n\t * @param store: Store<AppState>\r\n\t * @param fb: FormBuilder\r\n\t * @param cdr\r\n\t */\r\n\tconstructor(\r\n\t\tprivate authNoticeService: AuthNoticeService,\r\n\t\tprivate translate: TranslateService,\r\n\t\tprivate router: Router,\r\n\t\tprivate auth: AuthService,\r\n\t\tprivate store: Store<AppState>,\r\n\t\tprivate fb: FormBuilder,\r\n\t\tprivate cdr: ChangeDetectorRef,\r\n\t\tprivate registerService: RegisterService,\r\n\t\tprivate jwt: JwtService,\r\n\t\tprivate activeRoute: ActivatedRoute\r\n\t) {\r\n\t\tthis.unsubscribe = new Subject();\r\n\t}\r\n\r\n\t/*\r\n\t * @ Lifecycle sequences => https://angular.io/guide/lifecycle-hooks\r\n    */\r\n\r\n\t/**\r\n\t * On init\r\n\t */\r\n\tngOnInit() {\r\n\t\tthis.userForm = this.fb.group({\r\n\t\t\tmobile: ['', Validators.required]\r\n\t\t});\r\n\t\t// this.getIp();\r\n\t\tthis.actionType = 'Register';\r\n\t\tthis.activeRoute.queryParams.subscribe(param => {\r\n\t\t\tthis.registerType = (param && param.type === 'forgot') ? 'Forgot Password' : 'Register';\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n    * On destroy\r\n    */\r\n\tngOnDestroy(): void {\r\n\t\tthis.unsubscribe.next();\r\n\t\tthis.unsubscribe.complete();\r\n\t\tthis.loading = false;\r\n\t}\r\n\r\n\t/**\r\n\t * Checking control validation\r\n\t *\r\n\t * @param controlName: string => Equals to formControlName\r\n\t * @param validationType: string => Equals to valitors name\r\n\t */\r\n\tisControlHasError(controlName: string, validationType: string): boolean {\r\n\t\tconst control = this.userForm.controls[controlName];\r\n\t\tif (!control) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tconst result = control.hasError(validationType) && (control.dirty || control.touched);\r\n\t\treturn result;\r\n\t}\r\n\r\n\tregister() {\r\n\t\tconst data = this.registerType === 'Forgot Password' ? { ...this.userForm.value, isForgot: true } : this.userForm.value;\r\n\t\tthis.registerService.registerUser(this.actionType, { params: data }).subscribe(response => {\r\n\t\t\tthis.checkVerificationStatus(response);\r\n\t\t}, error => {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\t}\r\n\r\n\t// getIp() {\r\n\t//   this.ipService.returnIp().subscribe(response => {\r\n\t//     this.dummy['ip'] = response['ip'];\r\n\t//   }, error => {\r\n\t//     console.log(error);\r\n\t//   });\r\n\t// }\r\n\r\n\tcheckVerificationStatus(response) {\r\n\t\tthis.userForm.addControl('otp', new FormControl('', Validators.required));\r\n\t\tthis.actionType = 'Verify OTP';\r\n\t\tthis.cdr.detectChanges();\r\n\t\tif (response.result.token) {\r\n\t\t\tthis.jwt.setToken(response.result.token);\r\n\t\t\tthis.router.navigateByUrl('auth/choose-password');\r\n\t\t}\r\n\t}\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ApiService } from '../../../../apiservice/api.service';\nimport { Observable } from 'rxjs';\nimport { urls } from '../../../../urls/urls';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n  constructor(private apiService: ApiService) { }\n\n  registerUser(type, data): Observable<any> {\n    const url = type === 'Register' ? urls.register: urls.verifyMobile;\n    return this.apiService.post(url, data);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AuthNoticeComponent } from './auth-notice/auth-notice.component';\nimport { ChoosePasswordComponent } from './choose-password/choose-password.component';\nimport { SubscriberComponent } from './subscriber.component';\n\n\nconst routes: Routes = [\n  {\n\t\tpath: '',\n\t\tcomponent: SubscriberComponent,\n\t\tchildren: [\n\t\t\t{\n\t\t\t\tpath: '',\n\t\t\t\tredirectTo: 'login',\n\t\t\t\tpathMatch: 'full'\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'login',\n\t\t\t\tcomponent: LoginComponent,\n\t\t\t\tdata: {returnUrl: window.location.pathname}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'register',\n\t\t\t\tcomponent: RegisterComponent\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'forgot-password',\n\t\t\t\tcomponent: ForgotPasswordComponent,\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath: 'choose-password',\n\t\t\t\tcomponent: ChoosePasswordComponent\n\t\t\t}\n\t\t]\n\t}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SubscriberRoutingModule { }\n","<div class=\"d-flex flex-column flex-root\" id=\"kt_login_wrapper\">\n\t<div class=\"login login-1 login-signin-on d-flex flex-column flex-lg-row flex-row-fluid bg-white\" id=\"kt_login\">\n\t\t<!--begin::Aside-->\n\t\t<div class=\"login-aside d-flex flex-row-auto bgi-size-cover bgi-no-repeat p-10 p-lg-10\"\n\t\t\tstyle=\"background-image: url(./assets/media//bg/bg-4.jpg);\">\n\t\t\t<!--begin: Aside Container-->\n\t\t\t<div class=\"d-flex flex-row-fluid flex-column justify-content-between\">\n\t\t\t\t<!--begin: Aside header-->\n\t\t\t\t<a href=\"#\" class=\"flex-column-auto mt-5\">\n\t\t\t\t\t<img src=\"./assets/media/logos/logo-letter-1.png\" class=\"max-h-70px\" />\n\t\t\t\t</a>\n\t\t\t\t<!--end: Aside header-->\n\n\t\t\t\t<!--begin: Aside content-->\n\t\t\t\t<div class=\"flex-column-fluid d-flex flex-column justify-content-center\">\n\t\t\t\t\t<h3 class=\"font-size-h1 mb-5 text-white\">Welcome to Metronic!</h3>\n\t\t\t\t\t<p class=\"font-weight-lighter text-white opacity-80\">\n\t\t\t\t\t\tThe ultimate Bootstrap, Angular 8, React & VueJS admin theme framework for next generation web\n\t\t\t\t\t\tapps.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<!--end: Aside content-->\n\n\t\t\t\t<!--begin: Aside footer for desktop-->\n\t\t\t\t<div class=\"d-none flex-column-auto d-lg-flex justify-content-between mt-10\">\n\t\t\t\t\t<div class=\"opacity-70 font-weight-bold\ttext-white\">\n\t\t\t\t\t\t&copy; 2020 Metronic\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"d-flex\">\n\t\t\t\t\t\t<a href=\"#\" class=\"text-white\">Privacy</a>\n\t\t\t\t\t\t<a href=\"#\" class=\"text-white ml-10\">Legal</a>\n\t\t\t\t\t\t<a href=\"#\" class=\"text-white ml-10\">Contact</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!--end: Aside footer for desktop-->\n\t\t\t</div>\n\n\t\t</div>\n\t\t<!--begin::Aside-->\n\n\t\t<!--begin::Content-->\n\t\t<div class=\"flex-row-fluid d-flex flex-column position-relative p-7 overflow-hidden\">\n\t\t\t<!--begin::Content header-->\n\t\t\t<div\n\t\t\t\tclass=\"position-absolute top-0 right-0 text-right mt-5 mb-15 mb-lg-0 flex-column-auto justify-content-center py-5 px-10\"\n\t\t\t>\n\t\t\t\t<span class=\"font-weight-bold text-dark-50\">\n\t\t\t\t\tDon't have an account yet?\n\t\t\t\t</span>\n\t\t\t\t<a\n\t\t\t\t\thref=\"javascript:;\"\n\t\t\t\t\trouterLink=\"/auth/register\"\n\t\t\t\t\tclass=\"font-weight-bold ml-2\"\n\t\t\t\t\tid=\"kt_login_signup\"\n\t\t\t\t>{{ \"AUTH.GENERAL.SIGNUP_BUTTON\" | translate }}</a>\n\t\t\t</div>\n\t\t\t<!--end::Content header-->\n\t\t\t\n\t\t\t<router-outlet></router-outlet>\n\t\t\t<!--begin::Content footer for mobile-->\n\t\t\t<div\n\t\t\t\tclass=\"d-flex d-lg-none flex-column-auto flex-column flex-sm-row justify-content-between align-items-center mt-5 p-5\">\n\t\t\t\t<div class=\"text-dark-50 font-weight-bold order-2 order-sm-1 my-2\">\n\t\t\t\t\t&copy; 2020 Metronic\n\t\t\t\t</div>\n\t\t\t\t<div class=\"d-flex order-1 order-sm-2 my-2\">\n\t\t\t\t\t<a href=\"#\" class=\"text-dark-75 text-hover-primary\">Privacy</a>\n\t\t\t\t\t<a href=\"#\" class=\"text-dark-75 text-hover-primary ml-4\">Legal</a>\n\t\t\t\t\t<a href=\"#\" class=\"text-dark-75 text-hover-primary ml-4\">Contact</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<!--end::Content footer for mobile-->\n\t\t</div>\n\t\t<!--end::Content-->\n\t</div>\n</div>","// Angular\nimport { Component, ElementRef, OnInit, Renderer2, ViewEncapsulation } from '@angular/core';\n// Layout\nimport { LayoutConfigService, SplashScreenService, TranslationService } from '../../../core/_base/layout';\n// Auth\nimport { AuthNoticeService } from '../../../core/auth';\n\n@Component({\n  selector: 'kt-subscriber',\n  templateUrl: './subscriber.component.html',\n  styleUrls: ['./subscriber.component.scss'],\n\tencapsulation: ViewEncapsulation.None\n\n})\nexport class SubscriberComponent implements OnInit {\n\n  today: number = Date.now();\n\theaderLogo: string;\n\n  constructor(private el: ElementRef,\n\t\tprivate render: Renderer2,\n\t\tprivate layoutConfigService: LayoutConfigService,\n\t\tpublic authNoticeService: AuthNoticeService,\n\t\tprivate translationService: TranslationService,\n\t\tprivate splashScreenService: SplashScreenService) { }\n\n  ngOnInit(): void {\n    this.translationService.setLanguage(this.translationService.getSelectedLanguage());\n\t\tthis.headerLogo = this.layoutConfigService.getLogo();\n\n\t\tthis.splashScreenService.hide();\n  }\n\n  private loadCSS(styleUrl: string) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst styleElement = document.createElement('link');\n\t\t\tstyleElement.href = styleUrl;\n\t\t\tstyleElement.type = 'text/css';\n\t\t\tstyleElement.rel = 'stylesheet';\n\t\t\tstyleElement.onload = resolve;\n\t\t\tthis.render.appendChild(this.el.nativeElement, styleElement);\n\t\t});\n\t}\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n// Material\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n// Translate\nimport { TranslateModule } from '@ngx-translate/core';\n// NGRX\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n// CRUD\nimport { InterceptService } from '../../../core/_base/crud/';\n// Module components\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { AuthNoticeComponent } from './auth-notice/auth-notice.component';\nimport { ChoosePasswordComponent } from './choose-password/choose-password.component';\n// Auth\nimport { AuthEffects, AuthGuard, authReducer, AuthService } from '../../../core/auth';\n\nimport { SubscriberRoutingModule } from './subscriber-routing.module';\nimport { SubscriberComponent } from './subscriber.component';\n\n\n@NgModule({\n  declarations: [\n    SubscriberComponent,\n    LoginComponent,\n\t\tRegisterComponent,\n\t\tForgotPasswordComponent,\n\t\tAuthNoticeComponent,\n\t\tChoosePasswordComponent\n  ],\n  imports: [\n    CommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tMatButtonModule,\n\t\tMatInputModule,\n\t\tMatFormFieldModule,\n\t\tMatCheckboxModule,\n\t\tTranslateModule.forChild(),\n\t\tStoreModule.forFeature('auth', authReducer),\n\t\tEffectsModule.forFeature([AuthEffects]),\n    SubscriberRoutingModule\n  ]\n})\nexport class SubscriberModule { }\n"],"sourceRoot":"webpack:///"}